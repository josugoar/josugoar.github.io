{"version":3,"sources":["webpack:///./src/components/pinnableItemConnectionHeader.tsx","webpack:///./src/components/repositoryMedia.tsx","webpack:///./src/components/language.tsx","webpack:///./src/components/languageConnection.tsx","webpack:///./src/components/repositoryTopic.tsx","webpack:///./src/components/repositoryTopicConnection.tsx","webpack:///./src/components/repositoryContent.tsx","webpack:///./src/components/repositoryHeader.tsx","webpack:///./src/components/repositoryNavigation.tsx","webpack:///./src/components/repository.tsx","webpack:///./src/components/pinnableItemConnection.tsx","webpack:///./src/components/userContent.tsx","webpack:///./src/components/userAvatar.tsx","webpack:///./src/components/userLabel.tsx","webpack:///./src/components/userHeader.tsx","webpack:///./src/components/user.tsx","webpack:///./src/pages/index.tsx","webpack:///./node_modules/@primer/octicons/index.js"],"names":["PinnableItemConnectionHeader","className","RepositoryMedia","props","style","maxHeight","href","url","loading","src","openGraphImageUrl","alt","name","Language","backgroundColor","color","itemProp","LanguageConnection","nodes","map","node","idx","key","RepositoryTopic","title","topic","RepositoryTopicConnection","RepositoryContent","description","repositoryTopics","languages","RepositoryHeader","dangerouslySetInnerHTML","__html","repo","toSVG","class","marginTop","RepositoryNavigation","aria-label","aria-current","code","Repository","usesCustomOpenGraphImage","PinnableItemConnection","margin","UserContent","bio","UserAvatar","zIndex","login","height","avatarUrl","width","UserLabel","position","UserHeader","User","top","itemScope","itemType","IndexPage","data","github","viewer","pinnedItems","objectAssign","_loop","_Object$keys","_i","htmlAttributes","icon","defaultOptions","options","attributes","attrObj","parseInt","concat","trim","_i2","_Object$keys2","Object","keys","length","option","push","join","symbol","_i3","_Object$keys3","heights","version","viewBox","arguments","undefined","naturalHeight","closestNaturalHeight","path","naturalHeights","reduce","acc","module","exports"],"mappings":"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","file":"component---src-pages-index-tsx-07b39f64e725777befdc.js","sourcesContent":["import React from \"react\"\n\nconst PinnableItemConnectionHeader = () => {\n  return <h2 className=\"h3-mktg text-gray mb-n2\">Featured repositories...</h2>\n}\n\nexport default PinnableItemConnectionHeader\n","import React from \"react\"\n\nexport type RepositoryMediaProps = {\n  name: string\n  openGraphImageUrl: string\n  url: string\n}\n\nconst RepositoryMedia = (props: RepositoryMediaProps) => (\n  <a\n    className=\"overflow-hidden flex-items-center rounded-top-1 border-black-fade border-bottom d-flex position-relative\"\n    style={{ maxHeight: 275 }}\n    href={props.url}\n  >\n    <img\n      className=\"d-block width-full\"\n      loading=\"lazy\"\n      src={props.openGraphImageUrl}\n      alt={props.name}\n    />\n  </a>\n)\n\nexport default RepositoryMedia\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\n\nexport type LanguageProps = {\n  color: string\n  name: string\n}\n\nconst Language = (props: LanguageProps) => {\n  return (\n    <span className=\"f6 my-1 ml-0\">\n      <span\n        className=\"repo-language-color\"\n        style={{ backgroundColor: props.color }}\n      ></span>{\" \"}\n      <span itemProp=\"programmingLanguage\">{props.name}</span>\n    </span>\n  )\n}\n\nexport default Language\n\nexport const query = graphql`\n  fragment LanguageFragment on GitHub_Language {\n    color\n    name\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport Language, { LanguageProps } from \"./language\"\n\nexport type LanguageConnectionProps = {\n  nodes: LanguageProps[]\n}\n\nconst LanguageConnection = (props: LanguageConnectionProps) => {\n  return (\n    <div className=\"p-3\">\n      <ul className=\"d-flex flex-wrap f6 list-style-none text-gray\">\n        {props.nodes.map((node, idx) => (\n          <li className=\"mb-2 mr-4\" key={idx}>\n            <Language color={node.color} name={node.name} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default LanguageConnection\n\nexport const query = graphql`\n  fragment LanguageConnectionFragment on GitHub_LanguageConnection {\n    nodes {\n      ...LanguageFragment\n    }\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\n\nexport type RepositoryTopicProps = {\n  topic: {\n    name: string\n  }\n}\n\nconst RepositoryTopic = (props: RepositoryTopicProps) => {\n  return (\n    <span className=\"topic-tag f6 mb-2\" title={`Topic: ${props.topic.name}`}>\n      {props.topic.name}\n    </span>\n  )\n}\n\nexport default RepositoryTopic\n\nexport const query = graphql`\n  fragment RepositoryTopicFragment on GitHub_RepositoryTopic {\n    topic {\n      name\n    }\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport RepositoryTopic, { RepositoryTopicProps } from \"./repositoryTopic\"\n\nexport type RepositoryTopicConnectionProps = {\n  nodes: RepositoryTopicProps[]\n}\n\nconst RepositoryTopicConnection = (props: RepositoryTopicConnectionProps) => {\n  return (\n    <div className=\"d-flex flex-wrap border-bottom border-gray-light px-3 pt-2 pb-2\">\n      {props.nodes.map((node, idx) => (\n        <RepositoryTopic key={idx} topic={node.topic} />\n      ))}\n    </div>\n  )\n}\n\nexport default RepositoryTopicConnection\n\nexport const query = graphql`\n  fragment RepositoryTopicConnectionFragment on GitHub_RepositoryTopicConnection {\n    nodes {\n      ...RepositoryTopicFragment\n    }\n  }\n`\n","import React from \"react\"\nimport LanguageConnection, {\n  LanguageConnectionProps,\n} from \"./languageConnection\"\nimport RepositoryTopicConnection, {\n  RepositoryTopicConnectionProps,\n} from \"./repositoryTopicConnection\"\n\nexport type RepositoryContentProps = {\n  description: string\n  languages: LanguageConnectionProps\n  repositoryTopics: RepositoryTopicConnectionProps\n}\n\nconst RepositoryContent = (props: RepositoryContentProps) => {\n  return (\n    <div className=\"border-bottom bg-white\">\n      <div className=\"px-3 pt-3\">\n        <p className=\"color-text-secondary mb-0\"></p>\n        <div>{props.description}</div>\n        <p></p>\n      </div>\n      <RepositoryTopicConnection nodes={props.repositoryTopics.nodes} />\n      <LanguageConnection nodes={props.languages.nodes} />\n    </div>\n  )\n}\n\nexport default RepositoryContent\n","import { repo } from \"@primer/octicons\"\nimport React from \"react\"\n\nexport type RepositoryHeaderProps = {\n  name: string\n  url: string\n}\n\nconst RepositoryHeader = (props: RepositoryHeaderProps) => {\n  return (\n    <div className=\"d-flex my-3 px-3\">\n      <span\n        dangerouslySetInnerHTML={{\n          __html: repo.toSVG({ class: \"text-gray-dark mr-2\" }),\n        }}\n        style={{ marginTop: 2 }}\n      />\n      <h1 className=\"f3 text-gray text-normal lh-condensed\">\n        <a className=\"text-bold\" href={props.url}>\n          {props.name}\n        </a>\n      </h1>\n    </div>\n  )\n}\n\nexport default RepositoryHeader\n","import { code } from \"@primer/octicons\"\nimport React from \"react\"\n\nexport type RepositoryNavigationProps = {\n  url: string\n}\n\nconst RepositoryNavigation = (props: RepositoryNavigationProps) => {\n  return (\n    <div className=\"tabnav px-3 mb-0\">\n      <nav className=\"tabnav-tabs\" aria-label=\"Repository menu\">\n        <a\n          aria-current=\"true\"\n          href={props.url}\n          className=\"tabnav-tab f6 px-2 py-1\"\n        >\n          <span\n            dangerouslySetInnerHTML={{\n              __html: code.toSVG({ class: \"text-gray-dark\" }),\n            }}\n          ></span>{\" \"}\n          Code\n        </a>\n      </nav>\n    </div>\n  )\n}\n\nexport default RepositoryNavigation\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport { LanguageConnectionProps } from \"./languageConnection\"\nimport RepositoryMedia from \"./repositoryMedia\"\nimport RepositoryContent from \"./repositoryContent\"\nimport RepositoryHeader from \"./repositoryHeader\"\nimport RepositoryNavigation from \"./repositoryNavigation\"\nimport { RepositoryTopicConnectionProps } from \"./repositoryTopicConnection\"\n\nexport type RepositoryProps = {\n  description: string | null\n  languages: LanguageConnectionProps\n  name: string\n  openGraphImageUrl: string\n  repositoryTopics: RepositoryTopicConnectionProps\n  url: string\n  usesCustomOpenGraphImage: boolean\n}\n\nconst Repository = (props: RepositoryProps) => {\n  return (\n    <article className=\"border rounded-1 box-shadow bg-gray-light my-4\">\n      {props.usesCustomOpenGraphImage && (\n        <RepositoryMedia\n          name={props.name}\n          openGraphImageUrl={props.openGraphImageUrl}\n          url={props.url}\n        />\n      )}\n      <RepositoryHeader name={props.name} url={props.url} />\n      <RepositoryNavigation url={props.url} />\n      <RepositoryContent\n        description={props.description}\n        languages={props.languages}\n        repositoryTopics={props.repositoryTopics}\n      />\n    </article>\n  )\n}\n\nexport default Repository\n\nexport const query = graphql`\n  fragment RepositoryFragment on GitHub_Repository {\n    description\n    languages(first: 10) {\n      ...LanguageConnectionFragment\n    }\n    name\n    openGraphImageUrl\n    repositoryTopics(first: 20) {\n      ...RepositoryTopicConnectionFragment\n    }\n    url\n    usesCustomOpenGraphImage\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport PinnableItemConnectionHeader from \"./pinnableItemConnectionHeader\"\nimport Repository, { RepositoryProps } from \"./repository\"\n\nexport type PinnableItemConnectionProps = {\n  nodes: RepositoryProps[]\n}\n\nconst PinnableItemConnection = (props: PinnableItemConnectionProps) => {\n  return (\n    <div className=\"col-md-8 col-lg-7 py-4\" style={{ margin: \"0 auto\" }}>\n      <PinnableItemConnectionHeader />\n      {props.nodes.map((node, idx) => (\n        <Repository\n          description={node.description}\n          key={idx}\n          languages={node.languages}\n          name={node.name}\n          openGraphImageUrl={node.openGraphImageUrl}\n          repositoryTopics={node.repositoryTopics}\n          url={node.url}\n          usesCustomOpenGraphImage={node.usesCustomOpenGraphImage}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default PinnableItemConnection\n\nexport const query = graphql`\n  fragment PinnableItemConnectionFragment on GitHub_PinnableItemConnection {\n    nodes {\n      ...RepositoryFragment\n    }\n  }\n`\n","import React from \"react\"\n\nexport type UserContentProps = {\n  bio: string\n}\n\nconst UserContent = (props: UserContentProps) => {\n  return (\n    <div className=\"p-note user-profile-bio mb-3 js-user-profile-bio f4\">\n      <div>{props.bio}</div>\n    </div>\n  )\n}\n\nexport default UserContent\n","import React from \"react\"\n\nexport type UserAvatarProps = {\n  avatarUrl: string\n  login: string\n  url: string\n}\n\nconst UserAvatar = (props: UserAvatarProps) => {\n  return (\n    <div\n      className=\"position-relative d-inline-block col-2 col-md-12 mr-3 mr-md-0 flex-shrink-0\"\n      style={{ zIndex: 4 }}\n    >\n      <a\n        className=\"tooltipped tooltipped-s d-block\"\n        aria-label={props.login}\n        href={props.url}\n      >\n        <img\n          style={{ height: \"auto\" }}\n          alt={props.login}\n          className=\"avatar avatar-user width-full border bg-white\"\n          src={props.avatarUrl}\n          width=\"260\"\n          height=\"260\"\n        />\n      </a>\n    </div>\n  )\n}\n\nexport default UserAvatar\n","import React from \"react\"\n\nexport type UserLabelProps = {\n  login: string\n  name: string\n}\n\nconst UserLabel = (props: UserLabelProps) => {\n  return (\n    <div\n      className=\"vcard-names-container float-left col-10 col-md-12 pt-1 pt-md-3 pb-1 pb-md-3\"\n      style={{ position: \"sticky\" }}\n    >\n      <h1 className=\"vcard-names pl-2 pl-md-0\">\n        <span\n          className=\"vcard-fullname d-block overflow-hidden\"\n          itemProp=\"name\"\n        >\n          {props.name}\n        </span>\n        <span className=\"vcard-username d-block\" itemProp=\"additionalName\">\n          {props.login}\n        </span>\n      </h1>\n    </div>\n  )\n}\n\nexport default UserLabel\n","import React from \"react\"\nimport UserAvatar from \"./userAvatar\"\nimport UserLabel from \"./userLabel\"\n\nexport type UserHeaderProps = {\n  avatarUrl: string\n  login: string\n  name: string\n  url: string\n}\n\nconst UserHeader = (props: UserHeaderProps) => {\n  return (\n    <div className=\"clearfix d-flex d-md-block flex-items-center mb-4 mb-md-0\">\n      <div className=\"clearfix d-flex d-md-block flex-items-center mb-4 mb-md-0\">\n        <UserAvatar\n          avatarUrl={props.avatarUrl}\n          login={props.login}\n          url={props.url}\n        />\n        <UserLabel login={props.login} name={props.name} />\n      </div>\n    </div>\n  )\n}\n\nexport default UserHeader\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport { PinnableItemConnectionProps } from \"./pinnableItemConnection\"\nimport UserContent from \"./userContent\"\nimport UserHeader from \"./userHeader\"\n\nexport type UserProps = {\n  avatarUrl: string\n  bio: string | null\n  login: string\n  name: string | null\n  pinnedItems?: PinnableItemConnectionProps\n  url: string\n}\n\nconst User = (props: UserProps) => {\n  return (\n    <div\n      className=\"flex-shrink-0 col-12 col-md-3 mb-4 mb-md-0 pt-4 position-md-sticky\"\n      style={{ height: \"100%\", top: 0 }}\n    >\n      <div className=\"h-card\" itemScope itemType=\"http://schema.org/Person\">\n        <UserHeader\n          avatarUrl={props.avatarUrl}\n          login={props.login}\n          name={props.name}\n          url={props.url}\n        />\n        <UserContent bio={props.bio} />\n      </div>\n    </div>\n  )\n}\n\nexport default User\n\nexport const query = graphql`\n  fragment UserFragment on GitHub_User {\n    avatarUrl\n    bio\n    login\n    name\n    url\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport PinnableItemConnection from \"../components/pinnableItemConnection\"\nimport User, { UserProps } from \"../components/user\"\n\ntype IndexPageProps = {\n  data: {\n    github: {\n      viewer: UserProps\n    }\n  }\n}\n\nconst IndexPage = (props: IndexPageProps) => {\n  return (\n    <main>\n      <title>\n        {props.data.github.viewer.login}{\" \"}\n        {props.data.github.viewer.name && `(${props.data.github.viewer.name})`}\n      </title>\n      <div\n        className=\"border-bottom border-gray-light\"\n        style={{ backgroundColor: \"#fcfdfd\" }}\n      >\n        <div className=\"container-xl p-responsive\">\n          <div className=\"d-md-flex flex-wrap flex-lg-nowrap gutter-md\">\n            <User\n              avatarUrl={props.data.github.viewer.avatarUrl}\n              bio={props.data.github.viewer.bio}\n              login={props.data.github.viewer.login}\n              name={props.data.github.viewer.name}\n              url={props.data.github.viewer.url}\n            />\n            <PinnableItemConnection\n              nodes={props.data.github.viewer.pinnedItems.nodes}\n            />\n          </div>\n        </div>\n      </div>\n    </main>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query IndexPageQuery {\n    github {\n      viewer {\n        ...UserFragment\n        pinnedItems(first: 6) {\n          ...PinnableItemConnectionFragment\n        }\n      }\n    }\n  }\n`\n","require(\"core-js/modules/es.array.reduce.js\");\n\nvar data = require('./build/data.json');\n\nvar objectAssign = require('object-assign');\n\nvar DEFAULT_HEIGHT = 16;\n\nvar _loop = function _loop() {\n  var key = _Object$keys[_i];\n\n  // Returns a string representation of html attributes\n  var htmlAttributes = function htmlAttributes(icon, defaultOptions, options) {\n    var attributes = [];\n    var attrObj = objectAssign({}, defaultOptions, options); // If the user passed in options\n\n    if (options) {\n      // If any of the width or height is passed in\n      if (options['width'] || options['height']) {\n        attrObj['width'] = options['width'] ? options['width'] : parseInt(options['height']) * defaultOptions['width'] / defaultOptions['height'];\n        attrObj['height'] = options['height'] ? options['height'] : parseInt(options['width']) * defaultOptions['height'] / defaultOptions['width'];\n      } // If the user passed in class\n\n\n      if (options['class']) {\n        attrObj['class'] = \"octicon octicon-\".concat(key, \" \").concat(options['class']);\n        attrObj['class'].trim();\n      } // If the user passed in aria-label\n\n\n      if (options['aria-label']) {\n        attrObj['aria-label'] = options['aria-label'];\n        attrObj['role'] = 'img'; // Un-hide the icon\n\n        delete attrObj['aria-hidden'];\n      }\n    }\n\n    for (var _i2 = 0, _Object$keys2 = Object.keys(attrObj); _i2 < _Object$keys2.length; _i2++) {\n      var option = _Object$keys2[_i2];\n      attributes.push(\"\".concat(option, \"=\\\"\").concat(attrObj[option], \"\\\"\"));\n    }\n\n    return attributes.join(' ').trim();\n  }; // Set the symbol for easy access\n\n\n  data[key].symbol = key; // Set options for each icon height\n\n  for (var _i3 = 0, _Object$keys3 = Object.keys(data[key].heights); _i3 < _Object$keys3.length; _i3++) {\n    var height = _Object$keys3[_i3];\n    data[key].heights[height].options = {\n      version: '1.1',\n      width: data[key].heights[height].width,\n      height: parseInt(height),\n      viewBox: \"0 0 \".concat(data[key].heights[height].width, \" \").concat(height),\n      class: \"octicon octicon-\".concat(key),\n      'aria-hidden': 'true'\n    };\n  } // Function to return an SVG object\n\n\n  data[key].toSVG = function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var height = options.height,\n        width = options.width;\n    var naturalHeight = closestNaturalHeight(Object.keys(data[key].heights), height || width || DEFAULT_HEIGHT);\n    return \"<svg \".concat(htmlAttributes(data[key], data[key].heights[naturalHeight].options, options), \">\").concat(data[key].heights[naturalHeight].path, \"</svg>\");\n  };\n};\n\nfor (var _i = 0, _Object$keys = Object.keys(data); _i < _Object$keys.length; _i++) {\n  _loop();\n} // Import data into exports\n\n\nmodule.exports = data;\n\nfunction closestNaturalHeight(naturalHeights, height) {\n  return naturalHeights.map(function (naturalHeight) {\n    return parseInt(naturalHeight, 10);\n  }).reduce(function (acc, naturalHeight) {\n    return naturalHeight <= height ? naturalHeight : acc;\n  }, naturalHeights[0]);\n}"],"sourceRoot":""}