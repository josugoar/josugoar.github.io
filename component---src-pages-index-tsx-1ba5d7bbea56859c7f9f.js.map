{"version":3,"file":"component---src-pages-index-tsx-1ba5d7bbea56859c7f9f.js","mappings":"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","sources":["webpack://josugoar.github.io/./node_modules/@primer/octicons/index.js","webpack://josugoar.github.io/./node_modules/gatsby/dist/internal-plugins/bundle-optimisations/polyfills/object-assign.js","webpack://josugoar.github.io/./src/components/Language.tsx","webpack://josugoar.github.io/./src/components/LanguageConnection.tsx","webpack://josugoar.github.io/./src/components/RepositoryTopic.tsx","webpack://josugoar.github.io/./src/components/RepositoryTopicConnection.tsx","webpack://josugoar.github.io/./src/components/Repository.tsx","webpack://josugoar.github.io/./src/components/PinnableItemConnection.tsx","webpack://josugoar.github.io/./src/components/User.tsx","webpack://josugoar.github.io/./src/pages/index.tsx"],"sourcesContent":["const data = require('./build/data.json')\nconst objectAssign = require('object-assign')\n\nconst DEFAULT_HEIGHT = 16\n\nfor (const key of Object.keys(data)) {\n  // Returns a string representation of html attributes\n  const htmlAttributes = (icon, defaultOptions, options) => {\n    const attributes = []\n    const attrObj = objectAssign({}, defaultOptions, options)\n\n    // If the user passed in options\n    if (options) {\n      // If any of the width or height is passed in\n      if (options['width'] || options['height']) {\n        attrObj['width'] = options['width']\n          ? options['width']\n          : (parseInt(options['height']) * defaultOptions['width']) / defaultOptions['height']\n        attrObj['height'] = options['height']\n          ? options['height']\n          : (parseInt(options['width']) * defaultOptions['height']) / defaultOptions['width']\n      }\n\n      // If the user passed in class\n      if (options['class']) {\n        attrObj['class'] = `octicon octicon-${key} ${options['class']}`\n        attrObj['class'].trim()\n      }\n\n      // If the user passed in aria-label\n      if (options['aria-label']) {\n        attrObj['aria-label'] = options['aria-label']\n        attrObj['role'] = 'img'\n\n        // Un-hide the icon\n        delete attrObj['aria-hidden']\n      }\n    }\n\n    for (const option of Object.keys(attrObj)) {\n      attributes.push(`${option}=\"${attrObj[option]}\"`)\n    }\n\n    return attributes.join(' ').trim()\n  }\n\n  // Set the symbol for easy access\n  data[key].symbol = key\n\n  // Set options for each icon height\n  for (const height of Object.keys(data[key].heights)) {\n    data[key].heights[height].options = {\n      version: '1.1',\n      width: data[key].heights[height].width,\n      height: parseInt(height),\n      viewBox: `0 0 ${data[key].heights[height].width} ${height}`,\n      class: `octicon octicon-${key}`,\n      'aria-hidden': 'true'\n    }\n  }\n\n  // Function to return an SVG object\n  data[key].toSVG = function (options = {}) {\n    const {height, width} = options\n    const naturalHeight = closestNaturalHeight(Object.keys(data[key].heights), height || width || DEFAULT_HEIGHT)\n    return `<svg ${htmlAttributes(data[key], data[key].heights[naturalHeight].options, options)}>${\n      data[key].heights[naturalHeight].path\n    }</svg>`\n  }\n}\n\n// Import data into exports\nmodule.exports = data\n\nfunction closestNaturalHeight(naturalHeights, height) {\n  return naturalHeights\n    .map(naturalHeight => parseInt(naturalHeight, 10))\n    .reduce((acc, naturalHeight) => (naturalHeight <= height ? naturalHeight : acc), naturalHeights[0])\n}\n","\"use strict\";\n\nmodule.exports = Object.assign;\n//# sourceMappingURL=object-assign.js.map","import { graphql } from \"gatsby\"\nimport React from \"react\"\n\nexport interface LanguageProps {\n  color: string\n  name: string\n}\n\nconst Language = ({ color, name }: LanguageProps) => (\n  <span className=\"f6 my-1 ml-0\">\n    <span className=\"repo-language-color\" style={{ backgroundColor: color }} />{\" \"}\n    <span itemProp=\"programmingLanguage\">{name}</span>\n  </span>\n)\n\nexport default Language\n\nexport const query = graphql`\n  fragment LanguageFragment on GitHub_Language {\n    color\n    name\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport Language, { LanguageProps } from \"./Language\"\n\ninterface LanguageNodeProps extends LanguageProps {\n  id: string\n}\n\nexport interface LanguageConnectionProps {\n  nodes: LanguageNodeProps[]\n}\n\nconst LanguageConnection = ({ nodes }: LanguageConnectionProps) => (\n  <div className=\"p-3\">\n    <ul className=\"d-flex flex-wrap f6 list-style-none color-text-secondary\">\n      {nodes.map(({ id, ...node }) => (\n        <li className=\"mb-2 mr-4\" key={id}>\n          <Language {...node} />\n        </li>\n      ))}\n    </ul>\n  </div>\n)\n\nexport default LanguageConnection\n\nexport const query = graphql`\n  fragment LanguageConnectionFragment on GitHub_LanguageConnection {\n    nodes {\n      id\n      ...LanguageFragment\n    }\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\n\nexport interface RepositoryTopicProps {\n  topic: {\n    name: string\n  }\n}\n\nconst RepositoryTopic = ({ topic: { name } }: RepositoryTopicProps) => (\n  <span className=\"topic-tag f6 mb-2\" title={`Topic: ${name}`}>\n    {name}\n  </span>\n)\n\nexport default RepositoryTopic\n\nexport const query = graphql`\n  fragment RepositoryTopicFragment on GitHub_RepositoryTopic {\n    topic {\n      name\n    }\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport RepositoryTopic, { RepositoryTopicProps } from \"./RepositoryTopic\"\n\ninterface RepositoryTopicNodeProps extends RepositoryTopicProps {\n  id: string\n}\n\nexport interface RepositoryTopicConnectionProps {\n  nodes: RepositoryTopicNodeProps[]\n}\n\nconst RepositoryTopicConnection = ({\n  nodes,\n}: RepositoryTopicConnectionProps) => (\n  <div className=\"d-flex flex-wrap border-bottom border-gray-light px-3 pt-2 pb-2\">\n    {nodes.map(({ id, ...node }, idx) => (\n      <React.Fragment key={id}>\n        <RepositoryTopic {...node} />\n        {idx < nodes.length - 1 && \"\\u00A0\"}\n      </React.Fragment>\n    ))}\n  </div>\n)\n\nexport default RepositoryTopicConnection\n\nexport const query = graphql`\n  fragment RepositoryTopicConnectionFragment on GitHub_RepositoryTopicConnection {\n    nodes {\n      id\n      ...RepositoryTopicFragment\n    }\n  }\n`\n","import { code, repo } from \"@primer/octicons\"\nimport { graphql } from \"gatsby\"\nimport React from \"react\"\nimport LanguageConnection, {\n  LanguageConnectionProps,\n} from \"./LanguageConnection\"\nimport RepositoryTopicConnection, {\n  RepositoryTopicConnectionProps,\n} from \"./RepositoryTopicConnection\"\n\nexport interface RepositoryProps {\n  description: string | null\n  languages: LanguageConnectionProps\n  name: string\n  openGraphImageUrl: string\n  repositoryTopics: RepositoryTopicConnectionProps\n  url: string\n  usesCustomOpenGraphImage: boolean\n}\n\nconst Repository = ({\n  description,\n  languages,\n  name,\n  openGraphImageUrl,\n  repositoryTopics,\n  url,\n  usesCustomOpenGraphImage,\n}: RepositoryProps) => (\n  <article className=\"border rounded-1 box-shadow bg-gray-light my-4\">\n    {usesCustomOpenGraphImage && (\n      <a\n        className=\"overflow-hidden flex-items-center rounded-top-1 border-black-fade border-bottom d-flex position-relative\"\n        style={{ maxHeight: 275 }}\n        href={url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <img\n          className=\"d-block width-full\"\n          style={{ maxHeight: 275, objectFit: \"contain\" }}\n          loading=\"lazy\"\n          src={openGraphImageUrl}\n          alt={name}\n        />\n      </a>\n    )}\n    <div className=\"px-3\">\n      <div className=\"d-flex flex-justify-between my-3\">\n        <div className=\"d-flex flex-auto\">\n          <span\n            dangerouslySetInnerHTML={{\n              // @ts-ignore: Property 'toSVG' does not exist on type '{ name: string; keywords: string[]; heights: { \"16\": { width: number; path: string; }; \"24\": { width: number; path: string; }; }; }'\n              __html: repo.toSVG({ class: \"color-text-primary mr-2\" }),\n            }}\n            style={{ marginTop: 2 }}\n          />\n          <h1 className=\"f3 color-text-secondary text-normal lh-condensed\">\n            <a\n              className=\"text-bold\"\n              href={url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {name}\n            </a>\n          </h1>\n        </div>\n      </div>\n    </div>\n    <div className=\"tabnav px-3 mb-0\">\n      <nav className=\"tabnav-tabs\" aria-label=\"Repository menu\">\n        <a\n          aria-current=\"true\"\n          href={url}\n          className=\"tabnav-tab f6 px-2 py-1\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <span\n            dangerouslySetInnerHTML={{\n              // @ts-ignore: Property 'toSVG' does not exist on type '{ name: string; keywords: string[]; heights: { \"16\": { width: number; path: string; }; \"24\": { width: number; path: string; }; }; }'\n              __html: code.toSVG({ class: \"color-text-primary\" }),\n            }}\n          />{\" \"}\n          Code\n        </a>\n      </nav>\n    </div>\n    <div className=\"border-bottom bg-white\">\n      <div className=\"px-3 pt-3\">\n        <p className=\"color-text-secondary mb-0\" />\n        <div>{description}</div>\n        <p />\n      </div>\n      <RepositoryTopicConnection {...repositoryTopics} />\n      <LanguageConnection {...languages} />\n    </div>\n  </article>\n)\n\nexport default Repository\n\nexport const query = graphql`\n  fragment RepositoryFragment on GitHub_Repository {\n    description\n    languages(first: 10, orderBy: { field: SIZE, direction: DESC }) {\n      ...LanguageConnectionFragment\n    }\n    name\n    openGraphImageUrl\n    repositoryTopics(first: 20) {\n      ...RepositoryTopicConnectionFragment\n    }\n    url\n    usesCustomOpenGraphImage\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport Repository, { RepositoryProps } from \"./Repository\"\n\ninterface RepositoryNodeProps extends RepositoryProps {\n  id: string\n}\n\nexport interface PinnableItemConnectionProps {\n  nodes: RepositoryNodeProps[]\n}\n\nconst PinnableItemConnection = ({ nodes }: PinnableItemConnectionProps) => (\n  <div className=\"col-md-8\" style={{ margin: \"auto\" }}>\n    {nodes.map(({ id, ...node }) => (\n      <Repository key={id} {...node} />\n    ))}\n  </div>\n)\n\nexport default PinnableItemConnection\n\nexport const query = graphql`\n  fragment PinnableItemConnectionFragment on GitHub_PinnableItemConnection {\n    nodes {\n      ... on GitHub_Repository {\n        id\n      }\n      ...RepositoryFragment\n    }\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\n\nexport interface UserProps {\n  avatarUrl: string\n  bio: string | null\n  login: string\n  name: string | null\n  url: string\n}\n\nconst User = ({ avatarUrl, bio, login, name, url }: UserProps) => (\n  <div\n    className=\"flex-shrink-0 col-12 col-md-3 pt-4 position-md-sticky user-profile\"\n    style={{ top: 0 }}\n  >\n    <div itemScope itemType=\"http://schema.org/Person\">\n      <div className=\"clearfix d-flex d-md-block flex-items-center mb-4 mb-md-0\">\n        <div\n          className=\"position-relative d-inline-block col-2 col-md-12 mr-3 mr-md-0 flex-shrink-0\"\n          style={{ zIndex: 4 }}\n        >\n          <a\n            className=\"d-block\"\n            href={url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img\n              className=\"avatar avatar-user width-full border bg-white\"\n              style={{ height: \"auto\" }}\n              alt={login}\n              src={avatarUrl}\n              width=\"260\"\n              height=\"260\"\n            />\n          </a>\n        </div>\n        <div\n          className=\"vcard-names-container float-left col-10 col-md-12 pt-1 pt-md-3 pb-1 pb-md-3\"\n          style={{ position: \"sticky\" }}\n        >\n          <h1 className=\"vcard-names pl-2 pl-md-0\">\n            <span\n              className=\"vcard-fullname d-block overflow-hidden\"\n              itemProp=\"name\"\n            >\n              {name}\n            </span>\n            <span className=\"vcard-username d-block\" itemProp=\"additionalName\">\n              {login}\n            </span>\n          </h1>\n        </div>\n      </div>\n      <div className=\"d-flex flex-column\">\n        <div className=\"d-flex flex-column d-md-block\">\n          {bio && (\n            <div className=\"user-profile-bio f4\">\n              <div>{bio}</div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\nexport default User\n\nexport const query = graphql`\n  fragment UserFragment on GitHub_User {\n    avatarUrl\n    bio\n    login\n    name\n    url\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport PinnableItemConnection, {\n  PinnableItemConnectionProps,\n} from \"../components/PinnableItemConnection\"\nimport User, { UserProps } from \"../components/User\"\n\ninterface ViewerProps extends UserProps {\n  pinnedItems: PinnableItemConnectionProps\n}\n\ninterface IndexPageProps {\n  data: {\n    github: {\n      viewer: ViewerProps\n    }\n  }\n}\n\nconst IndexPage = ({\n  data: {\n    github: {\n      viewer: { pinnedItems, ...user },\n    },\n  },\n}: IndexPageProps) => (\n  <main>\n    <title>{user.name ? `${user.login} (${user.name})` : user.login}</title>\n    <div className=\"container-xl px-5 px-md-4 px-lg-5\">\n      <div className=\"gutter-condensed flex-column flex-md-row d-flex mx-md-2 mx-lg-3\">\n        <User {...user} />\n        <PinnableItemConnection {...pinnedItems} />\n      </div>\n    </div>\n  </main>\n)\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    github {\n      viewer {\n        pinnedItems(first: 6, types: REPOSITORY) {\n          ...PinnableItemConnectionFragment\n        }\n        ...UserFragment\n      }\n    }\n  }\n`\n"],"names":["data","objectAssign","key","Object","keys","htmlAttributes","icon","defaultOptions","options","attributes","attrObj","parseInt","trim","option","push","join","symbol","height","heights","version","width","viewBox","class","toSVG","naturalHeight","closestNaturalHeight","path","naturalHeights","map","reduce","acc","module","exports","assign","_ref","color","name","React","className","style","backgroundColor","itemProp","nodes","_ref2","id","node","Language","topic","title","idx","RepositoryTopic","length","description","languages","openGraphImageUrl","repositoryTopics","url","usesCustomOpenGraphImage","maxHeight","href","target","rel","objectFit","loading","src","alt","dangerouslySetInnerHTML","__html","repo","marginTop","code","RepositoryTopicConnection","LanguageConnection","margin","Repository","avatarUrl","bio","login","top","itemScope","itemType","zIndex","position","github","viewer","pinnedItems","user","User","PinnableItemConnection"],"sourceRoot":""}