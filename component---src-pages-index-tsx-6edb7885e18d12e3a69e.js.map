{"version":3,"sources":["webpack://josugoar.github.io/./node_modules/@primer/octicons/index.js","webpack://josugoar.github.io/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://josugoar.github.io/./src/components/Language.tsx","webpack://josugoar.github.io/./src/components/LanguageConnection.tsx","webpack://josugoar.github.io/./src/components/RepositoryTopic.tsx","webpack://josugoar.github.io/./src/components/RepositoryTopicConnection.tsx","webpack://josugoar.github.io/./src/components/Repository.tsx","webpack://josugoar.github.io/./src/components/PinnableItemConnection.tsx","webpack://josugoar.github.io/./src/components/User.tsx","webpack://josugoar.github.io/./src/pages/index.tsx"],"names":["data","objectAssign","_loop","key","_Object$keys","_i","htmlAttributes","icon","defaultOptions","options","attributes","attrObj","parseInt","concat","trim","_i2","_Object$keys2","Object","keys","length","option","push","join","symbol","_i3","_Object$keys3","heights","height","version","width","viewBox","class","toSVG","arguments","undefined","naturalHeight","closestNaturalHeight","path","naturalHeights","map","reduce","acc","module","exports","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","indexOf","color","name","className","style","backgroundColor","itemProp","nodes","id","node","topic","title","description","languages","openGraphImageUrl","repositoryTopics","url","usesCustomOpenGraphImage","maxHeight","href","rel","loading","src","alt","dangerouslySetInnerHTML","__html","repo","marginTop","aria-label","aria-current","code","margin","avatarUrl","bio","login","top","itemScope","itemType","zIndex","position","viewer","github","pinnedItems"],"mappings":"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","file":"component---src-pages-index-tsx-6edb7885e18d12e3a69e.js","sourcesContent":["var data = require('./build/data.json');\n\nvar objectAssign = require('object-assign');\n\nvar DEFAULT_HEIGHT = 16;\n\nvar _loop = function _loop() {\n  var key = _Object$keys[_i];\n\n  // Returns a string representation of html attributes\n  var htmlAttributes = function htmlAttributes(icon, defaultOptions, options) {\n    var attributes = [];\n    var attrObj = objectAssign({}, defaultOptions, options); // If the user passed in options\n\n    if (options) {\n      // If any of the width or height is passed in\n      if (options['width'] || options['height']) {\n        attrObj['width'] = options['width'] ? options['width'] : parseInt(options['height']) * defaultOptions['width'] / defaultOptions['height'];\n        attrObj['height'] = options['height'] ? options['height'] : parseInt(options['width']) * defaultOptions['height'] / defaultOptions['width'];\n      } // If the user passed in class\n\n\n      if (options['class']) {\n        attrObj['class'] = \"octicon octicon-\".concat(key, \" \").concat(options['class']);\n        attrObj['class'].trim();\n      } // If the user passed in aria-label\n\n\n      if (options['aria-label']) {\n        attrObj['aria-label'] = options['aria-label'];\n        attrObj['role'] = 'img'; // Un-hide the icon\n\n        delete attrObj['aria-hidden'];\n      }\n    }\n\n    for (var _i2 = 0, _Object$keys2 = Object.keys(attrObj); _i2 < _Object$keys2.length; _i2++) {\n      var option = _Object$keys2[_i2];\n      attributes.push(\"\".concat(option, \"=\\\"\").concat(attrObj[option], \"\\\"\"));\n    }\n\n    return attributes.join(' ').trim();\n  }; // Set the symbol for easy access\n\n\n  data[key].symbol = key; // Set options for each icon height\n\n  for (var _i3 = 0, _Object$keys3 = Object.keys(data[key].heights); _i3 < _Object$keys3.length; _i3++) {\n    var height = _Object$keys3[_i3];\n    data[key].heights[height].options = {\n      version: '1.1',\n      width: data[key].heights[height].width,\n      height: parseInt(height),\n      viewBox: \"0 0 \".concat(data[key].heights[height].width, \" \").concat(height),\n      class: \"octicon octicon-\".concat(key),\n      'aria-hidden': 'true'\n    };\n  } // Function to return an SVG object\n\n\n  data[key].toSVG = function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var height = options.height,\n        width = options.width;\n    var naturalHeight = closestNaturalHeight(Object.keys(data[key].heights), height || width || DEFAULT_HEIGHT);\n    return \"<svg \".concat(htmlAttributes(data[key], data[key].heights[naturalHeight].options, options), \">\").concat(data[key].heights[naturalHeight].path, \"</svg>\");\n  };\n};\n\nfor (var _i = 0, _Object$keys = Object.keys(data); _i < _Object$keys.length; _i++) {\n  _loop();\n} // Import data into exports\n\n\nmodule.exports = data;\n\nfunction closestNaturalHeight(naturalHeights, height) {\n  return naturalHeights.map(function (naturalHeight) {\n    return parseInt(naturalHeight, 10);\n  }).reduce(function (acc, naturalHeight) {\n    return naturalHeight <= height ? naturalHeight : acc;\n  }, naturalHeights[0]);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { graphql } from \"gatsby\"\nimport React from \"react\"\n\nexport interface LanguageProps {\n  color: string\n  name: string\n}\n\nconst Language = ({ color, name }: LanguageProps) => (\n  <span className=\"f6 my-1 ml-0\">\n    <span className=\"repo-language-color\" style={{ backgroundColor: color }} />{\" \"}\n    <span itemProp=\"programmingLanguage\">{name}</span>\n  </span>\n)\n\nexport default Language\n\nexport const query = graphql`\n  fragment LanguageFragment on GitHub_Language {\n    color\n    name\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport Language, { LanguageProps } from \"./Language\"\n\ninterface LanguageNodeProps extends LanguageProps {\n  id: string\n}\n\nexport interface LanguageConnectionProps {\n  nodes: LanguageNodeProps[]\n}\n\nconst LanguageConnection = ({ nodes }: LanguageConnectionProps) => (\n  <div className=\"p-3\">\n    <ul className=\"d-flex flex-wrap f6 list-style-none text-gray\">\n      {nodes.map(({ id, ...node }) => (\n        <li className=\"mb-2 mr-4\" key={id}>\n          <Language {...node} />\n        </li>\n      ))}\n    </ul>\n  </div>\n)\n\nexport default LanguageConnection\n\nexport const query = graphql`\n  fragment LanguageConnectionFragment on GitHub_LanguageConnection {\n    nodes {\n      id\n      ...LanguageFragment\n    }\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\n\nexport interface RepositoryTopicProps {\n  topic: {\n    name: string\n  }\n}\n\nconst RepositoryTopic = ({ topic: { name } }: RepositoryTopicProps) => (\n  <span className=\"topic-tag f6 mb-2\" title={`Topic: ${name}`}>\n    {name}\n  </span>\n)\n\nexport default RepositoryTopic\n\nexport const query = graphql`\n  fragment RepositoryTopicFragment on GitHub_RepositoryTopic {\n    topic {\n      name\n    }\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport RepositoryTopic, { RepositoryTopicProps } from \"./RepositoryTopic\"\n\ninterface RepositoryTopicNodeProps extends RepositoryTopicProps {\n  id: string\n}\n\nexport interface RepositoryTopicConnectionProps {\n  nodes: RepositoryTopicNodeProps[]\n}\n\nconst RepositoryTopicConnection = ({\n  nodes,\n}: RepositoryTopicConnectionProps) => (\n  <div className=\"d-flex flex-wrap border-bottom border-gray-light px-3 pt-2 pb-2\">\n    {nodes.map(({ id, ...node }) => (\n      <RepositoryTopic key={id} {...node} />\n    ))}\n  </div>\n)\n\nexport default RepositoryTopicConnection\n\nexport const query = graphql`\n  fragment RepositoryTopicConnectionFragment on GitHub_RepositoryTopicConnection {\n    nodes {\n      id\n      ...RepositoryTopicFragment\n    }\n  }\n`\n","import { code, repo } from \"@primer/octicons\"\nimport { graphql } from \"gatsby\"\nimport React from \"react\"\nimport LanguageConnection, {\n  LanguageConnectionProps,\n} from \"./LanguageConnection\"\nimport RepositoryTopicConnection, {\n  RepositoryTopicConnectionProps,\n} from \"./RepositoryTopicConnection\"\n\nexport interface RepositoryProps {\n  description: string | null\n  languages: LanguageConnectionProps\n  name: string\n  openGraphImageUrl: string\n  repositoryTopics: RepositoryTopicConnectionProps\n  url: string\n  usesCustomOpenGraphImage: boolean\n}\n\nconst Repository = ({\n  description,\n  languages,\n  name,\n  openGraphImageUrl,\n  repositoryTopics,\n  url,\n  usesCustomOpenGraphImage,\n}: RepositoryProps) => (\n  <article className=\"border rounded-1 box-shadow bg-gray-light mb-4\">\n    {usesCustomOpenGraphImage && (\n      <a\n        className=\"overflow-hidden flex-items-center rounded-top-1 border-black-fade border-bottom d-flex position-relative\"\n        style={{ maxHeight: 275 }}\n        href={url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <img\n          className=\"d-block width-full\"\n          loading=\"lazy\"\n          src={openGraphImageUrl}\n          alt={name}\n        />\n      </a>\n    )}\n    <div className=\"px-3\">\n      <div className=\"d-flex flex-justify-between my-3\">\n        <div className=\"d-flex flex-auto\">\n          <span\n            dangerouslySetInnerHTML={{\n              // @ts-ignore: Property 'toSVG' does not exist on type '{ name: string; keywords: string[]; heights: { \"16\": { width: number; path: string; }; \"24\": { width: number; path: string; }; }; }'\n              __html: repo.toSVG({ class: \"text-gray-dark mr-2\" }),\n            }}\n            style={{ marginTop: 2 }}\n          />\n          <h1 className=\"f3 text-gray text-normal lh-condensed\">\n            <a\n              className=\"text-bold\"\n              href={url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {name}\n            </a>\n          </h1>\n        </div>\n      </div>\n    </div>\n    <div className=\"tabnav px-3 mb-0\">\n      <nav className=\"tabnav-tabs\" aria-label=\"Repository menu\">\n        <a\n          aria-current=\"true\"\n          href={url}\n          className=\"tabnav-tab f6 px-2 py-1\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <span\n            dangerouslySetInnerHTML={{\n              // @ts-ignore: Property 'toSVG' does not exist on type '{ name: string; keywords: string[]; heights: { \"16\": { width: number; path: string; }; \"24\": { width: number; path: string; }; }; }'\n              __html: code.toSVG({ class: \"text-gray-dark\" }),\n            }}\n          />{\" \"}\n          Code\n        </a>\n      </nav>\n    </div>\n    <div className=\"border-bottom bg-white\">\n      <div className=\"px-3 pt-3\">\n        <p className=\"text-gray mb-0\" />\n        <div>{description}</div>\n        <p />\n      </div>\n      <RepositoryTopicConnection nodes={repositoryTopics.nodes} />\n      <LanguageConnection nodes={languages.nodes} />\n    </div>\n  </article>\n)\n\nexport default Repository\n\nexport const query = graphql`\n  fragment RepositoryFragment on GitHub_Repository {\n    description\n    languages(first: 10, orderBy: { field: SIZE, direction: DESC }) {\n      ...LanguageConnectionFragment\n    }\n    name\n    openGraphImageUrl\n    repositoryTopics(first: 20) {\n      ...RepositoryTopicConnectionFragment\n    }\n    url\n    usesCustomOpenGraphImage\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport Repository, { RepositoryProps } from \"./Repository\"\n\ninterface RepositoryNodeProps extends RepositoryProps {\n  id: string\n}\n\nexport interface PinnableItemConnectionProps {\n  nodes: RepositoryNodeProps[]\n}\n\nconst PinnableItemConnection = ({ nodes }: PinnableItemConnectionProps) => (\n  <div className=\"col-md-8 col-lg-7 py-4\" style={{ margin: \"auto\" }}>\n    {nodes.map(({ id, ...node }) => (\n      <Repository key={id} {...node} />\n    ))}\n  </div>\n)\n\nexport default PinnableItemConnection\n\nexport const query = graphql`\n  fragment PinnableItemConnectionFragment on GitHub_PinnableItemConnection {\n    nodes {\n      ... on GitHub_Repository {\n        id\n      }\n      ...RepositoryFragment\n    }\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\n\nexport interface UserProps {\n  avatarUrl: string\n  bio: string | null\n  login: string\n  name: string | null\n  url: string\n}\n\nconst User = ({ avatarUrl, bio, login, name, url }: UserProps) => (\n  <div\n    className=\"flex-shrink-0 col-12 col-md-3 pt-4 position-md-sticky\"\n    style={{ height: \"100%\", top: 0 }}\n  >\n    <div itemScope itemType=\"http://schema.org/Person\">\n      <div className=\"clearfix d-flex d-md-block flex-items-center mb-4 mb-md-0\">\n        <div\n          className=\"position-relative d-inline-block col-2 col-md-12 mr-3 mr-md-0 flex-shrink-0\"\n          style={{ zIndex: 4 }}\n        >\n          <a\n            className=\"d-block\"\n            href={url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img\n              className=\"avatar avatar-user width-full border bg-white\"\n              style={{ height: \"auto\" }}\n              alt={login}\n              src={avatarUrl}\n              width=\"260\"\n              height=\"260\"\n            />\n          </a>\n        </div>\n        <div\n          className=\"vcard-names-container float-left col-10 col-md-12 pt-1 pt-md-3 pb-1 pb-md-3\"\n          style={{ position: \"sticky\" }}\n        >\n          <h1 className=\"vcard-names pl-2 pl-md-0\">\n            <span\n              className=\"vcard-fullname d-block overflow-hidden\"\n              itemProp=\"name\"\n            >\n              {name}\n            </span>\n            <span className=\"vcard-username d-block\" itemProp=\"additionalName\">\n              {login}\n            </span>\n          </h1>\n        </div>\n      </div>\n      <div className=\"d-flex flex-column\">\n        <div className=\"d-flex flex-column d-md-block\">\n          {bio && (\n            <div className=\"user-profile-bio f4\">\n              <div>{bio}</div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\nexport default User\n\nexport const query = graphql`\n  fragment UserFragment on GitHub_User {\n    avatarUrl\n    bio\n    login\n    name\n    url\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React, { useEffect } from \"react\"\nimport PinnableItemConnection, {\n  PinnableItemConnectionProps,\n} from \"../components/PinnableItemConnection\"\nimport User, { UserProps } from \"../components/User\"\n\ninterface ViewerProps extends UserProps {\n  pinnedItems: PinnableItemConnectionProps\n}\n\ninterface IndexPageProps {\n  data: {\n    github: {\n      viewer: ViewerProps\n    }\n  }\n}\n\nconst IndexPage = ({\n  data: {\n    github: { viewer },\n  },\n}: IndexPageProps) => (\n  <main>\n    <title>\n      {viewer.name ? `${viewer.login} (${viewer.name})` : viewer.login}\n    </title>\n    <div className=\"container-xl px-3 px-md-4 px-lg-5\">\n      <div className=\"gutter-condensed gutter-lg flex-column flex-md-row d-flex\">\n        <User\n          avatarUrl={viewer.avatarUrl}\n          bio={viewer.bio}\n          login={viewer.login}\n          name={viewer.name}\n          url={viewer.url}\n        />\n        <PinnableItemConnection nodes={viewer.pinnedItems.nodes} />\n      </div>\n    </div>\n  </main>\n)\n\nexport default IndexPage\n\nexport const query = graphql`\n  query IndexPageQuery {\n    github {\n      viewer {\n        pinnedItems(first: 6, types: REPOSITORY) {\n          ...PinnableItemConnectionFragment\n        }\n        ...UserFragment\n      }\n    }\n  }\n`\n"],"sourceRoot":""}