{"version":3,"sources":["webpack:///./src/components/language.tsx","webpack:///./src/components/languageConnection.tsx","webpack:///./src/components/repositoryTopic.tsx","webpack:///./src/components/repositoryTopicConnection.tsx","webpack:///./src/components/repository.tsx","webpack:///./src/components/pinnableItemConnection.tsx","webpack:///./src/components/user.tsx","webpack:///./src/pages/index.tsx","webpack:///./node_modules/@primer/octicons/index.js"],"names":["Language","color","name","className","style","backgroundColor","itemProp","LanguageConnection","nodes","map","node","key","id","RepositoryTopic","topic","title","RepositoryTopicConnection","RepositoryActions","url","aria-label","aria-current","href","dangerouslySetInnerHTML","__html","code","toSVG","class","RepositoryContent","description","languages","repositoryTopics","RepositoryHeader","repo","marginTop","RepositoryMedia","openGraphImageUrl","maxHeight","loading","src","alt","Repository","usesCustomOpenGraphImage","PinnableItemConnection","margin","UserAvatar","avatarUrl","login","zIndex","height","width","UserContent","bio","UserHeader","position","User","top","itemScope","itemType","IndexPage","viewer","data","github","useEffect","document","pinnedItems","objectAssign","_loop","_Object$keys","_i","htmlAttributes","icon","defaultOptions","options","attributes","attrObj","parseInt","concat","trim","_i2","_Object$keys2","Object","keys","length","option","push","join","symbol","_i3","_Object$keys3","heights","version","viewBox","arguments","undefined","naturalHeight","closestNaturalHeight","path","naturalHeights","reduce","acc","module","exports"],"mappings":"uIAkBeA,EAVE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACf,0BAAMC,UAAU,gBACd,0BACEA,UAAU,sBACVC,MAAO,CAAEC,gBAAiBJ,KACzB,IACH,0BAAMK,SAAS,uBAAuBJ,KCU3BK,EAZY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACzB,yBAAKL,UAAU,OACb,wBAAIA,UAAU,iDACXK,EAAMC,KAAI,SAACC,GAAD,OACT,wBAAIP,UAAU,YAAYQ,IAAKD,EAAKE,IAClC,kBAAC,EAAD,CAAUX,MAAOS,EAAKT,MAAOC,KAAMQ,EAAKR,cCFnCW,EANS,SAAC,GAAD,IAAYX,EAAZ,EAAGY,MAASZ,KAAZ,OACtB,0BAAMC,UAAU,oBAAoBY,MAAK,UAAYb,GAClDA,ICWUc,EAVmB,SAAC,GAAD,IAChCR,EADgC,EAChCA,MADgC,OAGhC,yBAAKL,UAAU,mEACZK,EAAMC,KAAI,SAACC,GAAD,OACT,kBAAC,EAAD,CAAiBC,IAAKD,EAAKE,GAAIE,MAAOJ,EAAKI,aCH3CG,EAAoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAH,OACxB,yBAAKf,UAAU,oBACb,yBAAKA,UAAU,cAAcgB,aAAW,mBACtC,uBAAGC,eAAa,OAAOC,KAAMH,EAAKf,UAAU,2BAC1C,0BACEmB,wBAAyB,CACvBC,OAAQC,OAAKC,MAAM,CAAEC,MAAO,sBAE7B,IALL,WAkBAC,EAAoB,SAAC,GAAD,IACxBC,EADwB,EACxBA,YACAC,EAFwB,EAExBA,UACAC,EAHwB,EAGxBA,iBAHwB,OAKxB,yBAAK3B,UAAU,0BACb,yBAAKA,UAAU,aACb,uBAAGA,UAAU,mBACb,6BAAMyB,GACN,6BAEF,kBAAC,EAAD,CAA2BpB,MAAOsB,EAAiBtB,QACnD,kBAAC,EAAD,CAAoBA,MAAOqB,EAAUrB,UASnCuB,EAAmB,SAAC,GAAD,IAAG7B,EAAH,EAAGA,KAAMgB,EAAT,EAASA,IAAT,OACvB,yBAAKf,UAAU,QACb,yBAAKA,UAAU,oCACb,yBAAKA,UAAU,oBACb,0BACEmB,wBAAyB,CACvBC,OAAQS,OAAKP,MAAM,CAAEC,MAAO,yBAE9BtB,MAAO,CAAE6B,UAAW,KAEtB,wBAAI9B,UAAU,yCACZ,uBAAGA,UAAU,YAAYkB,KAAMH,GAC5BhB,QAcPgC,EAAkB,SAAC,GAAD,IACtBhC,EADsB,EACtBA,KACAiC,EAFsB,EAEtBA,kBACAjB,EAHsB,EAGtBA,IAHsB,OAKtB,uBACEf,UAAU,2GACVC,MAAO,CAAEgC,UAAW,KACpBf,KAAMH,GAEN,yBACEf,UAAU,qBACVkC,QAAQ,OACRC,IAAKH,EACLI,IAAKrC,MAwCIsC,EA3BI,SAAC,GAAD,IACjBZ,EADiB,EACjBA,YACAC,EAFiB,EAEjBA,UACA3B,EAHiB,EAGjBA,KACAiC,EAJiB,EAIjBA,kBACAL,EALiB,EAKjBA,iBACAZ,EANiB,EAMjBA,IACAuB,EAPiB,EAOjBA,yBAPiB,OASjB,6BAAStC,UAAU,kDAChBsC,GACC,kBAAC,EAAD,CACEvC,KAAMA,EACNiC,kBAAmBA,EACnBjB,IAAKA,IAGT,kBAAC,EAAD,CAAkBhB,KAAMA,EAAMgB,IAAKA,IACnC,kBAAC,EAAD,CAAmBA,IAAKA,IACxB,kBAAC,EAAD,CACEU,YAAaA,EACbC,UAAWA,EACXC,iBAAkBA,MCtGTY,EAjBgB,SAAC,GAAD,IAAGlC,EAAH,EAAGA,MAAH,OAC7B,yBAAKL,UAAU,yBAAyBC,MAAO,CAAEuC,OAAQ,WACtDnC,EAAMC,KAAI,SAACC,GAAD,OACT,kBAAC,EAAD,CACEkB,YAAalB,EAAKkB,YAClBjB,IAAKD,EAAKE,GACViB,UAAWnB,EAAKmB,UAChB3B,KAAMQ,EAAKR,KACXiC,kBAAmBzB,EAAKyB,kBACxBL,iBAAkBpB,EAAKoB,iBACvBZ,IAAKR,EAAKQ,IACVuB,yBAA0B/B,EAAK+B,gCCdjCG,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,MAAO5B,EAArB,EAAqBA,IAArB,OACjB,yBACEf,UAAU,8EACVC,MAAO,CAAE2C,OAAQ,IAEjB,uBACE5C,UAAU,kCACVgB,aAAY2B,EACZzB,KAAMH,GAEN,yBACEd,MAAO,CAAE4C,OAAQ,QACjBT,IAAKO,EACL3C,UAAU,gDACVmC,IAAKO,EACLI,MAAM,MACND,OAAO,WAUTE,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAH,OAClB,yBAAKhD,UAAU,8BACb,6BAAMgD,KASJC,EAAa,SAAC,GAAD,IAAGN,EAAH,EAAGA,MAAO5C,EAAV,EAAUA,KAAV,OACjB,yBACEC,UAAU,8EACVC,MAAO,CAAEiD,SAAU,WAEnB,wBAAIlD,UAAU,4BACZ,0BAAMA,UAAU,yCAAyCG,SAAS,QAC/DJ,GAEH,0BAAMC,UAAU,yBAAyBG,SAAS,kBAC/CwC,MA0BMQ,EAfF,SAAC,GAAD,IAAGT,EAAH,EAAGA,UAAWM,EAAd,EAAcA,IAAKL,EAAnB,EAAmBA,MAAO5C,EAA1B,EAA0BA,KAAMgB,EAAhC,EAAgCA,IAAhC,OACX,yBACEf,UAAU,wDACVC,MAAO,CAAE4C,OAAQ,OAAQO,IAAK,IAE9B,yBAAKpD,UAAU,SAASqD,WAAS,EAACC,SAAS,4BACzC,yBAAKtD,UAAU,6DACb,kBAAC,EAAD,CAAY0C,UAAWA,EAAWC,MAAOA,EAAO5B,IAAKA,IACrD,kBAAC,EAAD,CAAY4B,MAAOA,EAAO5C,KAAMA,KAElC,kBAAC,EAAD,CAAaiD,IAAKA,OC7BTO,UA7BG,SAAC,GAIG,IAFRC,EAEQ,EAHpBC,KACEC,OAAUF,OASZ,OANAG,qBAAU,WACRC,SAAShD,MAAQ4C,EAAOzD,KACjByD,EAAOb,MADG,KACOa,EAAOzD,KADd,IAEbyD,EAAOb,QACV,IAGD,8BACE,yBAAK3C,UAAU,qCACb,yBAAKA,UAAU,6DACb,kBAAC,EAAD,CACE0C,UAAWc,EAAOd,UAClBM,IAAKQ,EAAOR,IACZL,MAAOa,EAAOb,MACd5C,KAAMyD,EAAOzD,KACbgB,IAAKyC,EAAOzC,MAEd,kBAAC,EAAD,CAAwBV,MAAOmD,EAAOK,YAAYxD,a,qBCzC5D,EAAQ,QAuER,IArEA,IAAIoD,EAAO,EAAQ,QAEfK,EAAe,EAAQ,QAIvBC,EAAQ,WACV,IAAIvD,EAAMwD,EAAaC,GAGnBC,EAAiB,SAAwBC,EAAMC,EAAgBC,GACjE,IAAIC,EAAa,GACbC,EAAUT,EAAa,GAAIM,EAAgBC,GAE3CA,KAEEA,EAAe,OAAKA,EAAgB,UACtCE,EAAe,MAAIF,EAAe,MAAIA,EAAe,MAAIG,SAASH,EAAgB,QAAKD,EAAsB,MAAIA,EAAuB,OACxIG,EAAgB,OAAIF,EAAgB,OAAIA,EAAgB,OAAIG,SAASH,EAAe,OAAKD,EAAuB,OAAIA,EAAsB,OAIxIC,EAAe,QACjBE,EAAe,MAAI,mBAAmBE,OAAOjE,EAAK,KAAKiE,OAAOJ,EAAe,OAC7EE,EAAe,MAAEG,QAIfL,EAAQ,gBACVE,EAAQ,cAAgBF,EAAQ,cAChCE,EAAc,KAAI,aAEXA,EAAQ,iBAInB,IAAK,IAAII,EAAM,EAAGC,EAAgBC,OAAOC,KAAKP,GAAUI,EAAMC,EAAcG,OAAQJ,IAAO,CACzF,IAAIK,EAASJ,EAAcD,GAC3BL,EAAWW,KAAK,GAAGR,OAAOO,EAAQ,MAAOP,OAAOF,EAAQS,GAAS,MAGnE,OAAOV,EAAWY,KAAK,KAAKR,QAI9BjB,EAAKjD,GAAK2E,OAAS3E,EAEnB,IAAK,IAAI4E,EAAM,EAAGC,EAAgBR,OAAOC,KAAKrB,EAAKjD,GAAK8E,SAAUF,EAAMC,EAAcN,OAAQK,IAAO,CACnG,IAAIvC,EAASwC,EAAcD,GAC3B3B,EAAKjD,GAAK8E,QAAQzC,GAAQwB,QAAU,CAClCkB,QAAS,MACTzC,MAAOW,EAAKjD,GAAK8E,QAAQzC,GAAQC,MACjCD,OAAQ2B,SAAS3B,GACjB2C,QAAS,OAAOf,OAAOhB,EAAKjD,GAAK8E,QAAQzC,GAAQC,MAAO,KAAK2B,OAAO5B,GACpEtB,MAAO,mBAAmBkD,OAAOjE,GACjC,cAAe,QAKnBiD,EAAKjD,GAAKc,MAAQ,WAChB,IAAI+C,EAAUoB,UAAUV,OAAS,QAAsBW,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,GAC9E5C,EAASwB,EAAQxB,OACjBC,EAAQuB,EAAQvB,MAChB6C,EAAgBC,EAAqBf,OAAOC,KAAKrB,EAAKjD,GAAK8E,SAAUzC,GAAUC,GA5DlE,IA6DjB,MAAO,QAAQ2B,OAAOP,EAAeT,EAAKjD,GAAMiD,EAAKjD,GAAK8E,QAAQK,GAAetB,QAASA,GAAU,KAAKI,OAAOhB,EAAKjD,GAAK8E,QAAQK,GAAeE,KAAM,YAIlJ5B,EAAK,EAAGD,EAAea,OAAOC,KAAKrB,GAAOQ,EAAKD,EAAae,OAAQd,IAC3EF,IAMF,SAAS6B,EAAqBE,EAAgBjD,GAC5C,OAAOiD,EAAexF,KAAI,SAAUqF,GAClC,OAAOnB,SAASmB,EAAe,OAC9BI,QAAO,SAAUC,EAAKL,GACvB,OAAOA,GAAiB9C,EAAS8C,EAAgBK,IAChDF,EAAe,IAPpBG,EAAOC,QAAUzC","file":"component---src-pages-index-tsx-01e25b77b9372a718fc8.js","sourcesContent":["import { graphql } from \"gatsby\"\nimport React from \"react\"\n\nexport interface LanguageProps {\n  color: string\n  name: string\n}\n\nconst Language = ({ color, name }: LanguageProps) => (\n  <span className=\"f6 my-1 ml-0\">\n    <span\n      className=\"repo-language-color\"\n      style={{ backgroundColor: color }}\n    />{\" \"}\n    <span itemProp=\"programmingLanguage\">{name}</span>\n  </span>\n)\n\nexport default Language\n\nexport const query = graphql`\n  fragment LanguageFragment on GitHub_Language {\n    color\n    name\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport Language, { LanguageProps } from \"./language\"\n\ninterface LanguageNodeProps extends LanguageProps {\n  id: string\n}\n\nexport interface LanguageConnectionProps {\n  nodes: LanguageNodeProps[]\n}\n\nconst LanguageConnection = ({ nodes }: LanguageConnectionProps) => (\n  <div className=\"p-3\">\n    <ul className=\"d-flex flex-wrap f6 list-style-none text-gray\">\n      {nodes.map((node) => (\n        <li className=\"mb-2 mr-4\" key={node.id}>\n          <Language color={node.color} name={node.name} />\n        </li>\n      ))}\n    </ul>\n  </div>\n)\n\nexport default LanguageConnection\n\nexport const query = graphql`\n  fragment LanguageConnectionFragment on GitHub_LanguageConnection {\n    nodes {\n      id\n      ...LanguageFragment\n    }\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\n\nexport type RepositoryTopicProps = {\n  topic: {\n    name: string\n  }\n}\n\nconst RepositoryTopic = ({ topic: { name } }: RepositoryTopicProps) => (\n  <span className=\"topic-tag f6 mb-2\" title={`Topic: ${name}`}>\n    {name}\n  </span>\n)\n\nexport default RepositoryTopic\n\nexport const query = graphql`\n  fragment RepositoryTopicFragment on GitHub_RepositoryTopic {\n    topic {\n      name\n    }\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport RepositoryTopic, { RepositoryTopicProps } from \"./repositoryTopic\"\n\ninterface RepositoryTopicNodeProps extends RepositoryTopicProps {\n  id: string\n}\n\nexport interface RepositoryTopicConnectionProps {\n  nodes: RepositoryTopicNodeProps[]\n}\n\nconst RepositoryTopicConnection = ({\n  nodes,\n}: RepositoryTopicConnectionProps) => (\n  <div className=\"d-flex flex-wrap border-bottom border-gray-light px-3 pt-2 pb-2\">\n    {nodes.map((node) => (\n      <RepositoryTopic key={node.id} topic={node.topic} />\n    ))}\n  </div>\n)\n\nexport default RepositoryTopicConnection\n\nexport const query = graphql`\n  fragment RepositoryTopicConnectionFragment on GitHub_RepositoryTopicConnection {\n    nodes {\n      id\n      ...RepositoryTopicFragment\n    }\n  }\n`\n","import { code, repo } from \"@primer/octicons\"\nimport { graphql } from \"gatsby\"\nimport React from \"react\"\nimport LanguageConnection, {\n  LanguageConnectionProps,\n} from \"./languageConnection\"\nimport RepositoryTopicConnection, {\n  RepositoryTopicConnectionProps,\n} from \"./repositoryTopicConnection\"\n\ninterface RepositoryActionsProps {\n  url: string\n}\n\nconst RepositoryActions = ({ url }: RepositoryActionsProps) => (\n  <div className=\"tabnav px-3 mb-0\">\n    <nav className=\"tabnav-tabs\" aria-label=\"Repository menu\">\n      <a aria-current=\"true\" href={url} className=\"tabnav-tab f6 px-2 py-1\">\n        <span\n          dangerouslySetInnerHTML={{\n            __html: code.toSVG({ class: \"text-gray-dark\" }),\n          }}\n        />{\" \"}\n        Code\n      </a>\n    </nav>\n  </div>\n)\n\ninterface RepositoryContentProps {\n  description: string | null\n  languages: LanguageConnectionProps\n  repositoryTopics: RepositoryTopicConnectionProps\n}\n\nconst RepositoryContent = ({\n  description,\n  languages,\n  repositoryTopics,\n}: RepositoryContentProps) => (\n  <div className=\"border-bottom bg-white\">\n    <div className=\"px-3 pt-3\">\n      <p className=\"text-gray mb-0\" />\n      <div>{description}</div>\n      <p />\n    </div>\n    <RepositoryTopicConnection nodes={repositoryTopics.nodes} />\n    <LanguageConnection nodes={languages.nodes} />\n  </div>\n)\n\ninterface RepositoryHeaderProps {\n  name: string\n  url: string\n}\n\nconst RepositoryHeader = ({ name, url }: RepositoryHeaderProps) => (\n  <div className=\"px-3\">\n    <div className=\"d-flex flex-justify-between my-3\">\n      <div className=\"d-flex flex-auto\">\n        <span\n          dangerouslySetInnerHTML={{\n            __html: repo.toSVG({ class: \"text-gray-dark mr-2\" }),\n          }}\n          style={{ marginTop: 2 }}\n        />\n        <h1 className=\"f3 text-gray text-normal lh-condensed\">\n          <a className=\"text-bold\" href={url}>\n            {name}\n          </a>\n        </h1>\n      </div>\n    </div>\n  </div>\n)\n\ninterface RepositoryMediaProps {\n  name: string\n  openGraphImageUrl: string\n  url: string\n}\n\nconst RepositoryMedia = ({\n  name,\n  openGraphImageUrl,\n  url,\n}: RepositoryMediaProps) => (\n  <a\n    className=\"overflow-hidden flex-items-center rounded-top-1 border-black-fade border-bottom d-flex position-relative\"\n    style={{ maxHeight: 275 }}\n    href={url}\n  >\n    <img\n      className=\"d-block width-full\"\n      loading=\"lazy\"\n      src={openGraphImageUrl}\n      alt={name}\n    />\n  </a>\n)\n\nexport interface RepositoryProps\n  extends RepositoryActionsProps,\n    RepositoryContentProps,\n    RepositoryHeaderProps,\n    RepositoryMediaProps {\n  usesCustomOpenGraphImage: boolean\n}\n\nconst Repository = ({\n  description,\n  languages,\n  name,\n  openGraphImageUrl,\n  repositoryTopics,\n  url,\n  usesCustomOpenGraphImage,\n}: RepositoryProps) => (\n  <article className=\"border rounded-1 box-shadow bg-gray-light mb-4\">\n    {usesCustomOpenGraphImage && (\n      <RepositoryMedia\n        name={name}\n        openGraphImageUrl={openGraphImageUrl}\n        url={url}\n      />\n    )}\n    <RepositoryHeader name={name} url={url} />\n    <RepositoryActions url={url} />\n    <RepositoryContent\n      description={description}\n      languages={languages}\n      repositoryTopics={repositoryTopics}\n    />\n  </article>\n)\n\nexport default Repository\n\nexport const query = graphql`\n  fragment RepositoryFragment on GitHub_Repository {\n    description\n    languages(first: 10) {\n      ...LanguageConnectionFragment\n    }\n    name\n    openGraphImageUrl\n    repositoryTopics(first: 20) {\n      ...RepositoryTopicConnectionFragment\n    }\n    url\n    usesCustomOpenGraphImage\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport Repository, { RepositoryProps } from \"./repository\"\n\ninterface RepositoryNodeProps extends RepositoryProps {\n  id: string\n}\n\nexport interface PinnableItemConnectionProps {\n  nodes: RepositoryNodeProps[]\n}\n\nconst PinnableItemConnection = ({ nodes }: PinnableItemConnectionProps) => (\n  <div className=\"col-md-8 col-lg-7 py-4\" style={{ margin: \"0 auto\" }}>\n    {nodes.map((node) => (\n      <Repository\n        description={node.description}\n        key={node.id}\n        languages={node.languages}\n        name={node.name}\n        openGraphImageUrl={node.openGraphImageUrl}\n        repositoryTopics={node.repositoryTopics}\n        url={node.url}\n        usesCustomOpenGraphImage={node.usesCustomOpenGraphImage}\n      />\n    ))}\n  </div>\n)\n\nexport default PinnableItemConnection\n\nexport const query = graphql`\n  fragment PinnableItemConnectionFragment on GitHub_PinnableItemConnection {\n    nodes {\n      ... on GitHub_Repository {\n        id\n      }\n      ...RepositoryFragment\n    }\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\n\ninterface UserAvatarProps {\n  avatarUrl: string\n  login: string\n  url: string\n}\n\nconst UserAvatar = ({ avatarUrl, login, url }: UserAvatarProps) => (\n  <div\n    className=\"position-relative d-inline-block col-2 col-md-12 mr-3 mr-md-0 flex-shrink-0\"\n    style={{ zIndex: 4 }}\n  >\n    <a\n      className=\"tooltipped tooltipped-s d-block\"\n      aria-label={login}\n      href={url}\n    >\n      <img\n        style={{ height: \"auto\" }}\n        alt={login}\n        className=\"avatar avatar-user width-full border bg-white\"\n        src={avatarUrl}\n        width=\"260\"\n        height=\"260\"\n      />\n    </a>\n  </div>\n)\n\ninterface UserContentProps {\n  bio: string | null\n}\n\nconst UserContent = ({ bio }: UserContentProps) => (\n  <div className=\"p-note user-profile-bio f4\">\n    <div>{bio}</div>\n  </div>\n)\n\ninterface UserHeaderProps {\n  login: string\n  name: string | null\n}\n\nconst UserHeader = ({ login, name }: UserHeaderProps) => (\n  <div\n    className=\"vcard-names-container float-left col-10 col-md-12 pt-1 pt-md-3 pb-1 pb-md-3\"\n    style={{ position: \"sticky\" }}\n  >\n    <h1 className=\"vcard-names pl-2 pl-md-0\">\n      <span className=\"vcard-fullname d-block overflow-hidden\" itemProp=\"name\">\n        {name}\n      </span>\n      <span className=\"vcard-username d-block\" itemProp=\"additionalName\">\n        {login}\n      </span>\n    </h1>\n  </div>\n)\n\nexport interface UserProps\n  extends UserAvatarProps,\n    UserContentProps,\n    UserHeaderProps {}\n\nconst User = ({ avatarUrl, bio, login, name, url }: UserProps) => (\n  <div\n    className=\"flex-shrink-0 col-12 col-md-3 pt-4 position-md-sticky\"\n    style={{ height: \"100%\", top: 0 }}\n  >\n    <div className=\"h-card\" itemScope itemType=\"http://schema.org/Person\">\n      <div className=\"clearfix d-flex d-md-block flex-items-center mb-4 mb-md-0\">\n        <UserAvatar avatarUrl={avatarUrl} login={login} url={url} />\n        <UserHeader login={login} name={name} />\n      </div>\n      <UserContent bio={bio} />\n    </div>\n  </div>\n)\n\nexport default User\n\nexport const query = graphql`\n  fragment UserFragment on GitHub_User {\n    avatarUrl\n    bio\n    login\n    name\n    url\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React, { useEffect } from \"react\"\nimport PinnableItemConnection, {\n  PinnableItemConnectionProps,\n} from \"../components/pinnableItemConnection\"\nimport User, { UserProps } from \"../components/user\"\n\ninterface ViewerProps extends UserProps {\n  pinnedItems: PinnableItemConnectionProps\n}\n\ninterface IndexPageProps {\n  data: {\n    github: {\n      viewer: ViewerProps\n    }\n  }\n}\n\nconst IndexPage = ({\n  data: {\n    github: { viewer },\n  },\n}: IndexPageProps) => {\n  useEffect(() => {\n    document.title = viewer.name\n      ? `${viewer.login} (${viewer.name})`\n      : viewer.login\n  }, [])\n\n  return (\n    <main>\n      <div className=\"container-xl px-3 px-md-4 px-lg-5\">\n        <div className=\"gutter-condensed gutter-lg flex-column flex-md-row d-flex\">\n          <User\n            avatarUrl={viewer.avatarUrl}\n            bio={viewer.bio}\n            login={viewer.login}\n            name={viewer.name}\n            url={viewer.url}\n          />\n          <PinnableItemConnection nodes={viewer.pinnedItems.nodes} />\n        </div>\n      </div>\n    </main>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query IndexPageQuery {\n    github {\n      viewer {\n        ...UserFragment\n        pinnedItems(first: 6) {\n          ...PinnableItemConnectionFragment\n        }\n      }\n    }\n  }\n`\n","require(\"core-js/modules/es.array.reduce.js\");\n\nvar data = require('./build/data.json');\n\nvar objectAssign = require('object-assign');\n\nvar DEFAULT_HEIGHT = 16;\n\nvar _loop = function _loop() {\n  var key = _Object$keys[_i];\n\n  // Returns a string representation of html attributes\n  var htmlAttributes = function htmlAttributes(icon, defaultOptions, options) {\n    var attributes = [];\n    var attrObj = objectAssign({}, defaultOptions, options); // If the user passed in options\n\n    if (options) {\n      // If any of the width or height is passed in\n      if (options['width'] || options['height']) {\n        attrObj['width'] = options['width'] ? options['width'] : parseInt(options['height']) * defaultOptions['width'] / defaultOptions['height'];\n        attrObj['height'] = options['height'] ? options['height'] : parseInt(options['width']) * defaultOptions['height'] / defaultOptions['width'];\n      } // If the user passed in class\n\n\n      if (options['class']) {\n        attrObj['class'] = \"octicon octicon-\".concat(key, \" \").concat(options['class']);\n        attrObj['class'].trim();\n      } // If the user passed in aria-label\n\n\n      if (options['aria-label']) {\n        attrObj['aria-label'] = options['aria-label'];\n        attrObj['role'] = 'img'; // Un-hide the icon\n\n        delete attrObj['aria-hidden'];\n      }\n    }\n\n    for (var _i2 = 0, _Object$keys2 = Object.keys(attrObj); _i2 < _Object$keys2.length; _i2++) {\n      var option = _Object$keys2[_i2];\n      attributes.push(\"\".concat(option, \"=\\\"\").concat(attrObj[option], \"\\\"\"));\n    }\n\n    return attributes.join(' ').trim();\n  }; // Set the symbol for easy access\n\n\n  data[key].symbol = key; // Set options for each icon height\n\n  for (var _i3 = 0, _Object$keys3 = Object.keys(data[key].heights); _i3 < _Object$keys3.length; _i3++) {\n    var height = _Object$keys3[_i3];\n    data[key].heights[height].options = {\n      version: '1.1',\n      width: data[key].heights[height].width,\n      height: parseInt(height),\n      viewBox: \"0 0 \".concat(data[key].heights[height].width, \" \").concat(height),\n      class: \"octicon octicon-\".concat(key),\n      'aria-hidden': 'true'\n    };\n  } // Function to return an SVG object\n\n\n  data[key].toSVG = function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var height = options.height,\n        width = options.width;\n    var naturalHeight = closestNaturalHeight(Object.keys(data[key].heights), height || width || DEFAULT_HEIGHT);\n    return \"<svg \".concat(htmlAttributes(data[key], data[key].heights[naturalHeight].options, options), \">\").concat(data[key].heights[naturalHeight].path, \"</svg>\");\n  };\n};\n\nfor (var _i = 0, _Object$keys = Object.keys(data); _i < _Object$keys.length; _i++) {\n  _loop();\n} // Import data into exports\n\n\nmodule.exports = data;\n\nfunction closestNaturalHeight(naturalHeights, height) {\n  return naturalHeights.map(function (naturalHeight) {\n    return parseInt(naturalHeight, 10);\n  }).reduce(function (acc, naturalHeight) {\n    return naturalHeight <= height ? naturalHeight : acc;\n  }, naturalHeights[0]);\n}"],"sourceRoot":""}